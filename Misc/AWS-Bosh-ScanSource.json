{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Ingress Security Rules: inter-Cloudfoundry & services networking",

  "Parameters": {
    "DeploymentName": {
      "Type": "String",
      "Description": "Deployment Name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]$",
      "ConstraintDescription": "Must be a valid domain label matching /^([A-Za-z0-9]+[A-Za-z0-9-])+[A-Za-z0-9]$/"
    },
    "ScanSourceCidr": {
      "Type": "String",
      "Default": "",
      "Description": "Scan Source CIDR",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?",
      "ConstraintDescription": "Valid CIDR"
    },
    "CreateElastiCacheInfrastructure": {
      "Type": "String",
      "Default": "true",
      "Description": "Create ElastiCache Networks",
      "AllowedValues": [ "true", "false" ]
    },
    "CreateRabbitmqNetworks": {
      "Type": "String",
      "Default": "true",
      "Description": "Create RabbitMQ network(s)",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployElb": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy External ELB",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployAppsRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Apps RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployBoshRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Bosh RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployCfRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Cf RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployElb": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy External ELB",
      "AllowedValues": [ "true", "false" ]
    },
    "Availability": {
      "Type": "String",
      "Default": "SingleAZ",
      "Description": "Availability Typr",
      "AllowedValues": [ "SingleAZ", "SingleAZ-HA", "MultiAZ" ]
    }
  },

  "Conditions": {
    "DeployElb": { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] },
    "CreateElastiCacheInfrastructure": { "Fn::Equals": [ { "Ref": "CreateElastiCacheInfrastructure" }, "true" ] },
    "CreateRabbitmqNetworks": { "Fn::Equals": [ { "Ref": "CreateRabbitmqNetworks" }, "true" ] },
    "DeployAppsRdsInstance": { "Fn::Equals": [ { "Ref": "DeployAppsRdsInstance" }, "true" ] },
    "DeployBoshRdsInstance": { "Fn::Equals": [ { "Ref": "DeployBoshRdsInstance" }, "true" ] },
    "DeployCfRdsInstance": { "Fn::Equals": [ { "Ref": "DeployCfRdsInstance" }, "true" ] },
    "WhitelistScanSource": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ScanSourceCidr" }, "" ] } ] },
    "WhitelistScanSourceAndDeployElb": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ScanSourceCidr" }, "" ] } ] },
        { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] }
      ]
    },
    "WhitelistScanSourceAndCreateRabbitmqNetworks": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ScanSourceCidr" }, "" ] } ] },
        { "Fn::Equals": [ { "Ref": "CreateRabbitmqNetworks" }, "true" ] }
      ]
    },
    "WhitelistScanSourceAndCreateElastiCacheInfrastructure": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ScanSourceCidr" }, "" ] } ] },
        { "Fn::Equals": [ { "Ref": "CreateElastiCacheInfrastructure" }, "true" ] }
      ]
    },
    "WhitelistScanSourceAndDeployAppsRdsInstance": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ScanSourceCidr" }, "" ] } ] },
        { "Fn::Equals": [ { "Ref": "DeployAppsRdsInstance" }, "true" ] }
      ]
    },
    "WhitelistScanSourceAndDeployBoshRdsInstance": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ScanSourceCidr" }, "" ] } ] },
        { "Fn::Equals": [ { "Ref": "DeployBoshRdsInstance" }, "true" ] }
      ]
    },
    "WhitelistScanSourceAndDeployCfRdsInstance": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ScanSourceCidr" }, "" ] } ] },
        { "Fn::Equals": [ { "Ref": "DeployCfRdsInstance" }, "true" ] }
      ]
    }
  },

  "Resources": {
   "ScanSourceToCfSsh": {
     "Type": "AWS::EC2::SecurityGroupIngress",
     "Condition": "WhitelistScanSourceAndDeployElb",
     "Properties": {
       "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfSshElbSecurityGroup" } },
       "CidrIp": { "Ref": "ScanSourceCidr" },
       "FromPort": "-1",
       "ToPort": "-1",
       "IpProtocol": "-1"
     }
   },
   "ScanSourceToDirectorElb": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSourceAndDeployElb",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorElbSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToDirectorInstance": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSource",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToDmz": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSource",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DmzSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToElastiCache": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSourceAndCreateElastiCacheInfrastructure",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-ElastiCacheSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToLb": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSource",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToRabbitmq": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSourceAndCreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToAppsRds": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSourceAndDeployAppsRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsRdsSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToBoshRds": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSourceAndDeployBoshRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-BoshRdsSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "ScanSourceToCfRds": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "WhitelistScanSourceAndDeployCfRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfRdsSecurityGroup" } },
        "CidrIp": { "Ref": "ScanSourceCidr" },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    }
  }
}

