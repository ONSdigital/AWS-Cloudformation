{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Egress Security Rules: inter-Cloudfoundry & services networking",

  "Parameters": {
    "DeploymentName": {
      "Type": "String",
      "Description": "Deployment Name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]$",
      "ConstraintDescription": "Must be a valid domain label matching /^([A-Za-z0-9]+[A-Za-z0-9-])+[A-Za-z0-9]$/"
    },
    "CreateElastiCacheInfrastructure": {
      "Type": "String",
      "Default": "true",
      "Description": "Create ElastiCache Networks",
      "AllowedValues": [ "true", "false" ]
    },
    "CreateRabbitmqNetworks": {
      "Type": "String",
      "Default": "true",
      "Description": "Create RabbitMQ network(s)",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployAppsRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Apps RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployBoshRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Bosh RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployCfRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Cf RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "ExternalRdsCidr1": {
      "Type": "String",
      "Default": "",
      "Description": "External RDS Database CIDR",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalRdsCidr2": {
      "Type": "String",
      "Default": "",
      "Description": "External RDS Database CIDR2",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalRdsCidr3": {
      "Type": "String",
      "Default": "",
      "Description": "External RDS Database CIDR3",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalRdsPort": {
      "Type": "Number",
      "Default": "5432",
      "MinValue": "1024",
      "MaxValue": "65535",
      "Description": "External RDS Port"
    },
    "ExternalRabbitmqCidr1": {
      "Type": "String",
      "Default": "",
      "Description": "External RabbitMQ CIDR1",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalRabbitmqCidr2": {
      "Type": "String",
      "Default": "",
      "Description": "External RabbitMQ CIDR2",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalRabbitmqCidr3": {
      "Type": "String",
      "Default": "",
      "Description": "External RabbitMQ CIDR3",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalRabbitmqPort1": {
      "Type": "Number",
      "Default": "5672",
      "MinValue": "1024",
      "MaxValue": "65535",
      "Description": "External RabbitMQ Port 1"
    },
    "ExternalRabbitmqPort2": {
      "Type": "Number",
      "Default": "5672",
      "MinValue": "1024",
      "MaxValue": "65535",
      "Description": "External RabbitMQ Port 2"
    },
    "ExternalNtpCidr1": {
      "Type": "String",
      "Default": "0.0.0.0/0",
      "Description": "External NTP CIDR 1",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalNtpCidr2": {
      "Type": "String",
      "Default": "",
      "Description": "External NTP CIDR 2",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalNtpCidr3": {
      "Type": "String",
      "Default": "",
      "Description": "External NTP CIDR 3",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalSyslogCidr1": {
      "Type": "String",
      "Default": "",
      "Description": "External Syslog Main CIDR",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalSyslogCidr2": {
      "Type": "String",
      "Default": "",
      "Description": "External Syslog Fallback CIDR 1",
      "AllowedPattern": "^((([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))\\.){3}([01]?[0-9]?[0-9]|2([0-4][0-9]|5[0-5]))/([0-2]?[0-9]|3[0-2]))?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalSyslogCidr3": {
      "Type": "String",
      "Default": "",
      "Description": "External Syslog Fallback CIDR 2",
      "AllowedPattern": "^(([0-9]{1,3}\\.){3}[0-9]{1,3}/[0-3][0-9])?$",
      "ConstraintDescription": "Valid CIDR"
    },
    "ExternalSyslogPort": {
      "Type": "Number",
      "Default": "514",
      "MinValue": "1",
      "MaxValue": "65535",
      "Description": "External Syslog Port"
    },
    "ExternalSyslogProtocol": {
      "Type": "String",
      "Default": "tcp",
      "Description": "External Syslog Protocol",
      "AllowedValues": [ "tcp", "udp" ]
    },
    "AllowInternetAccess": {
      "Type": "String",
      "Default": "true",
      "Description": "Allow outbound HTTP & HTTPS connections",
      "AllowedValues": [ "true", "false" ]
    }
  },

  "Outputs": {
    "ExternalSyslogCidr1": {
      "Description": "External Syslog Main IP",
      "Condition": "WhitelistExternalSyslogCidr1",
      "Value": { "Ref": "ExternalSyslogCidr1" }
    },
    "ExternalSyslogCidr2": {
      "Description": "External Syslog Fallback IP 1",
      "Condition": "WhitelistExternalSyslogCidr2",
      "Value": { "Ref": "ExternalSyslogCidr2" }
    },
    "ExternalSyslogCidr3": {
      "Description": "External Syslog Fallback IP 2",
      "Condition": "WhitelistExternalSyslogCidr3",
      "Value": { "Ref": "ExternalSyslogCidr3" }
    },
    "ExternalSyslogPort": {
      "Description": "External Syslog Port",
      "Value": { "Ref": "ExternalSyslogPort" }
    },
    "ExternalSyslogProtocol": {
      "Description": "External Syslog Protocol",
      "Value": { "Ref": "ExternalSyslogProtocol" }
    }
  },

  "Conditions": {
    "CreateElastiCacheInfrastructure": { "Fn::Equals": [ { "Ref": "CreateElastiCacheInfrastructure" }, "true" ] },
    "CreateRabbitmqNetworks": { "Fn::Equals": [ { "Ref": "CreateRabbitmqNetworks" }, "true" ] },
    "DeployAppsRdsInstance": { "Fn::Equals": [ { "Ref": "DeployAppsRdsInstance" }, "true" ] },
    "DeployBoshRdsInstance": { "Fn::Equals": [ { "Ref": "DeployBoshRdsInstance" }, "true" ] },
    "DeployCfRdsInstance": { "Fn::Equals": [ { "Ref": "DeployCfRdsInstance" }, "true" ] },

    "AllowInternetAccess": { "Fn::Equals": [ { "Ref": "AllowInternetAccess" }, "true" ] },

    "WhitelistExternalRdsCidr1": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRdsCidr1" }, "" ] } ] },
    "WhitelistExternalRdsCidr2": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRdsCidr2" }, "" ] } ] },
    "WhitelistExternalRdsCidr3": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRdsCidr3" }, "" ] } ] },

    "WhitelistExternalRabbitmqCidr1": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqCidr1" }, "" ] } ] },
    "WhitelistExternalRabbitmqCidr2": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqCidr2" }, "" ] } ] },
    "WhitelistExternalRabbitmqCidr3": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqCidr3" }, "" ] } ] },

    "WhitelistExternalRabbitmqCidr1Port2": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqPort1" }, { "Ref": "ExternalRabbitmqPort2" } ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqCidr1" }, "" ] } ] }
      ]
    },
    "WhitelistExternalRabbitmqCidr2Port2": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqPort1" }, { "Ref": "ExternalRabbitmqPort2" } ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqCidr2" }, "" ] } ] }
      ]
    },
    "WhitelistExternalRabbitmqCidr3Port2": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqPort1" }, { "Ref": "ExternalRabbitmqPort2" } ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalRabbitmqCidr3" }, "" ] } ] }
      ]
    },

    "WhitelistExternalNtpCidr1": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalNtpCidr1" }, "" ] } ] },
    "WhitelistExternalNtpCidr2": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalNtpCidr1" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalNtpCidr2" }, "" ] } ] }
      ]
    },
    "WhitelistExternalNtpCidr3": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalNtpCidr1" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalNtpCidr2" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalNtpCidr3" }, "" ] } ] }
      ]
    },

    "WhitelistExternalSyslogCidr1": { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalSyslogCidr1" }, "" ] } ] },
    "WhitelistExternalSyslogCidr2": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalSyslogCidr1" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalSyslogCidr2" }, "" ] } ] }
      ]
    },
    "WhitelistExternalSyslogCidr3": {
      "Fn::And": [
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalSyslogCidr1" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalSyslogCidr2" }, "" ] } ] },
        { "Fn::Not": [ { "Fn::Equals": [ { "Ref": "ExternalSyslogCidr3" }, "" ] } ] }
      ]
    }
  },

  "Mappings": {
    "PrefixLists": {
      "ap-northeast-1": {
        "s3": "pl-61a54008"
      },
      "ap-northeast-2": {
        "s3": "pl-78a54011"
      },
      "ap-south-1": {
        "s3": "pl-78a54011"
      },
      "ap-southeast-1": {
        "s3": "pl-6fa54006"
      },
      "ap-southeast-2": {
        "s3": "pl-6ca54005"
      },
      "ca-central-1": {
        "s3": "pl-7da54014"
      },
      "eu-central-1": {
        "s3": "pl-6ea54007"
      },
      "eu-west-1": {
        "s3": "pl-6da54004"
      },
      "eu-west-2": {
        "s3": "pl-7ca54015"
      },
      "eu-west-3": {
        "s3": "pl-23ad484a"
      }.
      "sa-east-1": {
        "s3": "pl-6aa54003"
      },
      "us-east-1": {
        "s3": "pl-63a5400a"
      },
      "us-east-2": {
        "s3": "pl-7ba54012"
      },
      "us-west-1": {
        "s3": "pl-6ba54002"
      },
      "us-west-2": {
        "s3": "pl-68a54001"
      }
    }
  },

  "Resources": {
    "ApplicationLbToRouterTcpPort80": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-ApplicationLbSecurityGroup" } },
        "Description": "Application Load Balancer Security Group To Router Security Group TCP Port 80 (http)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RouterSecurityGroup" } },
        "FromPort": "80",
        "ToPort": "80" ,
        "IpProtocol": "tcp"
      }
    },
    "ApplicationLbToRouterTcpPort443": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-ApplicationLbSecurityGroup" } },
        "Description": "Application Load Balancer Security Group To Router Security Group TCP Port 80 (http)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RouterSecurityGroup" } },
        "FromPort": "443",
        "ToPort": "443" ,
        "IpProtocol": "tcp"
      }
    },
    "ApplicationLbToRouterTcpPort8080": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-ApplicationLbSecurityGroup" } },
        "Description": "Application LB Security Group To Router Security Group TCP Port 8080 (http-alt)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RouterSecurityGroup" } },
        "FromPort": "8080",
        "ToPort": "8080" ,
        "IpProtocol": "tcp"
      }
    },
   "CfSshElbToCfSshInstanceTcpPort2222": {
     "Type": "AWS::EC2::SecurityGroupEgress",
     "Properties": {
       "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfSshElbSecurityGroup" } },
       "Description": "Application LB Security Group To Router Security Group TCP Ports 2222 & 2223 (ssh proxy & ssh proxy health check)",
       "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfSshInstanceSecurityGroup" } },
       "FromPort": "2222",
       "ToPort": "2223",
       "IpProtocol": "tcp"
     }
   },

    "DirectorToS3PrefixListPort80": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To AWS S3 Prefix List TCP Port 80 (http)",
        "DestinationPrefixListId": { "Fn::FindInMap": [ "PrefixLists", { "Ref": "AWS::Region" }, "s3" ] },
        "FromPort": "80",
        "ToPort": "80",
        "IpProtocol": "tcp"
      }
    },
    "DirectorToS3PrefixListPort443": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To AWS S3 Prefix List TCP Port 443 (https)",
        "DestinationPrefixListId": { "Fn::FindInMap": [ "PrefixLists", { "Ref": "AWS::Region" }, "s3" ] },
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },
    "DirectorToPort80": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "AllowInternetAccess",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group Outbound TCP Port 80 (http)",
        "CidrIp": "0.0.0.0/0",
        "FromPort": "80",
        "ToPort": "80",
        "IpProtocol": "tcp"
      }
    },
    "DirectorToPort443": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "AllowInternetAccess",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group Outbound TCP Port 443 (https)",
        "CidrIp": "0.0.0.0/0",
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },

    "DirectorElbToDirectorTcpPort22": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorElbSecurityGroup" } },
        "Description": "Director Load Balancer Security Group To Director Instance Security Group TCP Port 22 (ssh)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "22",
        "ToPort": "22" ,
        "IpProtocol": "tcp"
      }
    },
    "DirectorElbToDirectorTcpPort6868": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorElbSecurityGroup" } },
        "Description": "Director Load Balancer Security Group To Director Instance Security Group TCP Port 6868 (mbus)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "6868",
        "ToPort": "6868" ,
        "IpProtocol": "tcp"
      }
    },
    "DirectorElbToDirectorTcpPort25555": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorElbSecurityGroup" } },
        "Description": "Director Load Balancer Security Group To Director Instance Security Group TCP Port 25555 (director)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "25555",
        "ToPort": "25555" ,
        "IpProtocol": "tcp"
      }
    },

    "DirectorInstanceToAppsRdsTcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "DeployAppsRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To Apps RDS Security Group TCP Port",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsRdsSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToBoshRdsTcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "DeployBoshRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To Bosh RDS Security Group TCP Port",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-BoshRdsSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-BoshDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-BoshDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToCfRdsTcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "DeployAppsRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To CF RDS Security Group TCP Port",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfRdsSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToPrivateTcpPort22": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To Private Security Group TCP Port 22 (ssh)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "22",
        "ToPort": "22" ,
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToRabbitmqTcpPort22": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To RabbitMQ Security Group TCP Port 22 (ssh)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "22",
        "ToPort": "22" ,
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToExternalSyslogCidr1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To External Syslog CIDR1",
        "CidrIp": { "Ref": "ExternalSyslogCidr1" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },
    "DirectorInstanceToExternalSyslogCidr2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To External Syslog CIDR2",
        "CidrIp": { "Ref": "ExternalSyslogCidr2" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },
    "DirectorInstanceToExternalSyslogCidr3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To External Syslog CIDR3",
        "CidrIp": { "Ref": "ExternalSyslogCidr3" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },
    "DirectorInstanceToExternalNtpCidr1UdpPort123": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To External NTP CIDR1 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr1" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },
    "DirectorInstanceToExternalNtpCidr2UdpPort123": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To External NTP CIDR2 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr2" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },
    "DirectorInstanceToExternalNtpCidr3UdpPort123": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Director Instance Security Group To External NTP CIDR3 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr3" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },


    "PrivateToPort80": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "AllowInternetAccess",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group Outbound TCP Port 80 (http)",
        "CidrIp": "0.0.0.0/0",
        "FromPort": "80",
        "ToPort": "80",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToPort443": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "AllowInternetAccess",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group Outbound TCP Port 443 (https)",
        "CidrIp": "0.0.0.0/0",
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToDirectorInstanceTcpPort4222": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To Director Instance Security Group TCP Port 4222 (nats)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "4222",
        "ToPort": "4222" ,
        "IpProtocol": "tcp"
      }
    },

    "PrivateToDirectorInstanceTcpPort25777": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To Director Instance Security Group TCP Port 25777 (registry)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "25777",
        "ToPort": "25777" ,
        "IpProtocol": "tcp"
      }
    },


    "PrivateToElastiCacheTcpPort6379": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateElastiCacheInfrastructure",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To ElastiCache Security Group TCP Port 6379 (redis)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-ElastiCacheSecurityGroup" } },
        "FromPort": "6379",
        "ToPort": "6379",
        "IpProtocol": "tcp"
      }
    },

    "PrivateToPrivate": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To Private Security Group",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "PrivateToRabbitmqTcpPort8300": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 8300-8302 (consul)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302",
        "IpProtocol": "tcp"
      }
    },

    "PrivateToRabbitmqUdpPort8300": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group UDP Port 8300-8302 (consul)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302",
        "IpProtocol": "udp"
      }
    },
    "PrivateToS3PrefixListTcpPort80": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To S3 Prefix List TCP Port 80 (http)",
        "DestinationPrefixListId": { "Fn::FindInMap": [ "PrefixLists", { "Ref": "AWS::Region" }, "s3" ] },
        "FromPort": "80",
        "ToPort": "80",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToS3PrefixListTcpPort443": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To S3 Prefix List TCP Port 443 (https)",
        "DestinationPrefixListId": { "Fn::FindInMap": [ "PrefixLists", { "Ref": "AWS::Region" }, "s3" ] },
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },

    "PrivateToAppsRdsTcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "DeployAppsRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To Apps RDS Security Group TCP Port",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsRdsSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToCfRdsTcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "DeployAppsRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To CF RDS Security Group TCP Port",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfRdsSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToRabbitmqTcpPort4567": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 4567 (rabbitmq service broker)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "4567",
        "ToPort": "4567",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToRabbitmqTcpPort5671": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Ports 5671 (amqp+ssl)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "5671",
        "ToPort": "5671",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToRabbitmqTcpPort15672": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 15672 (rabbitmq management dashboard)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "15672",
        "ToPort": "15672",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalNtpCidr1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External NTP CIDR1 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr1" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },
    "PrivateToExternalNtpCidr2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External NTP CIDR2 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr2" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },
    "PrivateToExternalNtpCidr3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External NTP CIDR3 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr3" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },

    "PrivateToExternalRdsCidr1TcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRdsCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RDS CIDR1 TCP Port",
        "CidrIp": { "Ref": "ExternalRdsCidr1" },
        "FromPort": { "Ref": "ExternalRdsPort" },
        "ToPort": { "Ref": "ExternalRdsPort" },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalRdsCidr2TcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRdsCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RDS CIDR2 TCP Port",
        "CidrIp": { "Ref": "ExternalRdsCidr2" },
        "FromPort": { "Ref": "ExternalRdsPort" },
        "ToPort": { "Ref": "ExternalRdsPort" },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalRdsCidr3TcpPort": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRdsCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RDS CIDR3 TCP Port",
        "CidrIp": { "Ref": "ExternalRdsCidr3" },
        "FromPort": { "Ref": "ExternalRdsPort" },
        "ToPort": { "Ref": "ExternalRdsPort" },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalRabbitmqCidr1TcpPort1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRabbitmqCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RabbitMQ CIDR1 TCP Port1",
        "CidrIp": { "Ref": "ExternalRabbitmqCidr1" },
        "FromPort": { "Ref": "ExternalRabbitmqPort1" },
        "ToPort": { "Ref": "ExternalRabbitmqPort1" },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalRabbitmqCidr2TcpPort1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRabbitmqCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RabbitMQ CIDR2 TCP Port1",
        "CidrIp": { "Ref": "ExternalRabbitmqCidr2" },
        "FromPort": { "Ref": "ExternalRabbitmqPort1" },
        "ToPort": { "Ref": "ExternalRabbitmqPort1" },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalRabbitmqCidr3Port1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRabbitmqCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RabbitMQ CIDR3 TCP Port1",
        "CidrIp": { "Ref": "ExternalRabbitmqCidr3" },
        "FromPort": { "Ref": "ExternalRabbitmqPort1" },
        "ToPort": { "Ref": "ExternalRabbitmqPort1" },
        "IpProtocol": "tcp"
      }
    },

    "PrivateToExternalRabbitmqCidr1TcpPort2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRabbitmqCidr1Port2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RabbitMQ CIDR1 TCP Port2",
        "CidrIp": { "Ref": "ExternalRabbitmqCidr1" },
        "FromPort": { "Ref": "ExternalRabbitmqPort2" },
        "ToPort": { "Ref": "ExternalRabbitmqPort2" },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalRabbitmqCidr2Port2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRabbitmqCidr2Port2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RabbitMQ CIDR2 TCP Port2",
        "CidrIp": { "Ref": "ExternalRabbitmqCidr2" },
        "FromPort": { "Ref": "ExternalRabbitmqPort2" },
        "ToPort": { "Ref": "ExternalRabbitmqPort2" },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToExternalRabbitmqCidr3Port3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalRabbitmqCidr3Port2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External RabbitMQ CIDR3 TCP Port2",
        "CidrIp": { "Ref": "ExternalRabbitmqCidr3" },
        "FromPort": { "Ref": "ExternalRabbitmqPort2" },
        "ToPort": { "Ref": "ExternalRabbitmqPort2" },
        "IpProtocol": "tcp"
      }
    },

    "PrivateToExternalSyslogCidr1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External Syslog CIDR1",
        "CidrIp": { "Ref": "ExternalSyslogCidr1" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },
    "PrivateToExternalSyslogCidr2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External Syslog CIDR2",
        "CidrIp": { "Ref": "ExternalSyslogCidr2" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },
    "PrivateToExternalSyslogCidr3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To External Syslog CIDR3",
        "CidrIp": { "Ref": "ExternalSyslogCidr3" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },

    "RabbitmqToRabbitmq": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To RabbitMQ Security Group",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },
    "RabbitmqToDirectorInstanceTcpPort4222": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Director Instance Security Group TCP Port 4222 (nats)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "4222",
        "ToPort": "4222" ,
        "IpProtocol": "tcp"
      }
    },
    "RabbitmqToDirectorInstanceTcpPort25777": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Director Instance Security Group TCP Port 25777 (registry)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "25777",
        "ToPort": "25777" ,
        "IpProtocol": "tcp"
      }
    },
    "RabbitmqToPrivateTcpPort4222": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Director Instance Security Group TCP Port 4222 (nats)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "4222",
        "ToPort": "4222",
        "IpProtocol": "tcp"
      }
    },
    "RabbitmqToPrivateTcpPort8300": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Private Security Group TCP Port 8300-8302 (consul)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302",
        "IpProtocol": "tcp"
      }
    },
    "RabbitmqToPrivateUdpPort8300": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Private Security Group UDP Port 8300-8302 (consul)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302",
        "IpProtocol": "udp"
      }
    },
    "RabbitmqToPrivateTcpPort8082": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Private Security Group TCP Port 8082 (metron)",
        "DestinationSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "8082",
        "ToPort": "8082",
        "IpProtocol": "tcp"
      }
    },

    "RabbitMqToExternalNtpCidr1UdpPort123": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To External NTP CIDR1 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr1" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },
    "RabbitMqToExternalNtpCidr2UdpPort123": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To External NTP CIDR2 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr2" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },
    "RabbitMqToExternalNtpCidr3UdpPort123": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalNtpCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To External NTP CIDR3 UDP Port 123",
        "CidrIp": { "Ref": "ExternalNtpCidr3" },
        "FromPort": "123",
        "ToPort": "123",
        "IpProtocol": "udp"
      }
    },

    "RabbitmqToExternalSyslogCidr1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr1",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To External Syslog CIDR1",
        "CidrIp": { "Ref": "ExternalSyslogCidr1" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },
    "RabbitmqToExternalSyslogCidr2": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr2",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To External Syslog CIDR2",
        "CidrIp": { "Ref": "ExternalSyslogCidr2" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },
    "RabbitmqToExternalSyslogCidr3": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Condition": "WhitelistExternalSyslogCidr3",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To External Syslog CIDR3",
        "CidrIp": { "Ref": "ExternalSyslogCidr3" },
        "FromPort": { "Ref": "ExternalSyslogPort" },
        "ToPort": { "Ref": "ExternalSyslogPort" },
        "IpProtocol": { "Ref": "ExternalSyslogProtocol" }
      }
    },

    "RabbitmqToS3PrefixListPort80": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To AWS S3 Prefix List TCP Port 80 (http)",
        "DestinationPrefixListId": { "Fn::FindInMap": [ "PrefixLists", { "Ref": "AWS::Region" }, "s3" ] },
        "FromPort": "80",
        "ToPort": "80",
        "IpProtocol": "tcp"
      }
    },
    "RabbitmqToS3PrefixListPort443": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To AWS S3 Prefix List TCP Port 443 (https:)",
        "DestinationPrefixListId": { "Fn::FindInMap": [ "PrefixLists", { "Ref": "AWS::Region" }, "s3" ] },
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    }
  }
}
