{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Ingress Security Rules: inter-Cloudfoundry & services networking",

  "Parameters": {
    "DeploymentName": {
      "Type": "String",
      "Description": "Deployment Name",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "^([A-Za-z0-9]+[A-Za-z0-9-]?)+[A-Za-z0-9]$",
      "ConstraintDescription": "Must be a valid domain label matching /^([A-Za-z0-9]+[A-Za-z0-9-])+[A-Za-z0-9]$/"
    },
    "CreateElastiCacheInfrastructure": {
      "Type": "String",
      "Default": "true",
      "Description": "Create ElastiCache Networks",
      "AllowedValues": [ "true", "false" ]
    },
    "CreateRabbitmqNetworks": {
      "Type": "String",
      "Default": "true",
      "Description": "Create RabbitMQ network(s)",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployElb": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy External ELB",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployAppsRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Apps RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployBoshRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Bosh RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployCfRdsInstance": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy Cf RDS Instance",
      "AllowedValues": [ "true", "false" ]
    },
    "DeployElb": {
      "Type": "String",
      "Default": "true",
      "Description": "Deploy External ELB",
      "AllowedValues": [ "true", "false" ]
    },
    "Availability": {
      "Type": "String",
      "Default": "SingleAZ",
      "Description": "Availability Typr",
      "AllowedValues": [ "SingleAZ", "SingleAZ-HA", "MultiAZ" ]
    }
  },

  "Conditions": {
    "DeployElb": { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] },
    "CreateElastiCacheInfrastructure": { "Fn::Equals": [ { "Ref": "CreateElastiCacheInfrastructure" }, "true" ] },
    "CreateRabbitmqNetworks": { "Fn::Equals": [ { "Ref": "CreateRabbitmqNetworks" }, "true" ] },
    "DeployAppsRdsInstance": { "Fn::Equals": [ { "Ref": "DeployAppsRdsInstance" }, "true" ] },
    "DeployBoshRdsInstance": { "Fn::Equals": [ { "Ref": "DeployBoshRdsInstance" }, "true" ] },
    "DeployCfRdsInstance": { "Fn::Equals": [ { "Ref": "DeployCfRdsInstance" }, "true" ] },
    "MultiAz": { "Fn::Equals": [ { "Ref": "Availability" }, "MultiAZ" ] },
    "MultiAzAndDeployElb": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "Availability" }, "MultiAZ" ] },
        { "Fn::Equals": [ { "Ref": "DeployElb" }, "true" ] }
      ]
    },
    "MultiAzAndCreateRabbitmqNetworks": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "Availability" }, "MultiAZ" ] },
        { "Fn::Equals": [ { "Ref": "CreateRabbitmqNetworks" }, "true" ] }
      ]
    },
    "MultiAzAndCreateElastiCacheInfrastructure": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "Availability" }, "MultiAZ" ] },
        { "Fn::Equals": [ { "Ref": "CreateElastiCacheInfrastructure" }, "true" ] }
      ]
    },
    "MultiAzAndDeployAppsRdsInstance": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "Availability" }, "MultiAZ" ] },
        { "Fn::Equals": [ { "Ref": "DeployAppsRdsInstance" }, "true" ] }
      ]
    },
    "MultiAzAndDeployBoshRdsInstance": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "Availability" }, "MultiAZ" ] },
        { "Fn::Equals": [ { "Ref": "DeployBoshRdsInstance" }, "true" ] }
      ]
    },
    "MultiAzAndDeployCfRdsInstance": {
      "Fn::And": [
        { "Fn::Equals": [ { "Ref": "Availability" }, "MultiAZ" ] },
        { "Fn::Equals": [ { "Ref": "DeployCfRdsInstance" }, "true" ] }
      ]
    }
  },

  "Resources": {
   "CfSshElbSecurityGroupToCfSshInstanceSecurityGroup": {
     "Type": "AWS::EC2::SecurityGroupIngress",
     "Condition": "DeployElb",
     "Properties": {
       "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfSshInstanceSecurityGroup" } },
       "Description": "CF SSH ELB Security Group To CF SSH Instance Security Group Port 2222 & 2223 (ssh-proxy & ssh-proxy-healthcheck)",
       "SourceSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfSshElbSecurityGroup" } },
       "FromPort": "2222",
       "ToPort": "2223",
       "IpProtocol": "tcp"
     }
   },
    "DirectorInstanceToPrivatePort22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Director Instance Security Group To Private Security Group TCP Port 22 (ssh)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "22",
        "ToPort": "22" ,
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToAppsRdsPort": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployAppsRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsRdsSecurityGroup" } },
        "Description": "Director Instance Security Group To Apps RDS Security Group",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToBoshRdsPort": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployBoshRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-BoshRdsSecurityGroup" } },
        "Description": "Director Instance Security Group To Bosh RDS Security Group",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-BoshDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-BoshDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToCfRdsPort": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployCfRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfRdsSecurityGroup" } },
        "Description": "Director Instance Security Group To CF RDS Security Group",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "DirectorInstanceToRabbitmqPort22": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Director Instance Security Group To RabbitMQ Security Group TCP Port 22 (ssh)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "FromPort": "22",
        "ToPort": "22" ,
        "IpProtocol": "tcp"
      }
    },

    "NatAz1IpToLbSecurityGroup443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "Description": "NAT AZ1 IP To Loadbalancer Security Group TCP Port 443 (https) - required To allow CF To call back into CF",
        "CidrIp": {
          "Fn::Join": [
            "/", [
              { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz1Ip" } },
              "32"
            ]
          ]
        },
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },
    "NatAz2IpToLbSecurityGroup443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "MultiAz",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "Description": "NAT AZ2 IP To Loadbalancer Security Group TCP Port 443 (https) - required To allow CF To call back into CF",
        "CidrIp": {
          "Fn::Join": [
            "/", [
              { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz2Ip" } },
              "32"
            ]
          ]
        },
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },
    "NatAz3IpToLbSecurityGroup443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "MultiAz",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "Description": "NAT AZ3 IP To Loadbalancer Security Group TCP Port 443 (https) - required To allow CF To call back into CF",
        "CidrIp": {
          "Fn::Join": [
            "/", [
              { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-NatAz3Ip" } },
              "32"
            ]
          ]
        },
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },

    "PrivateToLbSecurityGroup80": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "Description": "Private Security Group To Loadbalancer Security Group TCP Port 80 (http) - is this required?",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "80",
        "ToPort": "80",
        "IpProtocol": "tcp"
      }
    },

    "PrivateToLbSecurityGroup443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "Description": "Private Security Group To Loadbalancer Security Group TCP Port 443 (https) - is this required?",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "443",
        "ToPort": "443",
        "IpProtocol": "tcp"
      }
    },

    "LbSecurityGroupToRouterGroupPort80": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployElb",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RouterSecurityGroup" } },
        "Description": "LB Security Group To Router Security Group TCP Port 80 (http)",
        "SourceSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "FromPort": "80",
        "ToPort": "80" ,
        "IpProtocol": "tcp"
      }
    },
    "LbSecurityGroupToRouterGroupPort443": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployElb",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RouterSecurityGroup" } },
        "Description": "LB Security Group To Router Security Group TCP Port 443 (https)",
        "SourceSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "FromPort": "443",
        "ToPort": "443" ,
        "IpProtocol": "tcp"
      }
    },
    "LbSecurityGroupToRouterGroupPort8080": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployElb",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RouterSecurityGroup" } },
        "Description": "LB Security Group To Router Security Group TCP Port 8080 (http-alt)",
        "SourceSecurityGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-LbSecurityGroup" } },
        "FromPort": "8080",
        "ToPort": "8080" ,
        "IpProtocol": "tcp"
      }
    },

    "PrivateToDirectorInstancePort4222": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Private Security Group To Director Instance Security Group TCP Port 4222 (nats)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "4222",
        "ToPort": "4222" ,
        "IpProtocol": "tcp"
      }
    },

    "PrivateToDirectorInstancePort25777": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Private Security Group To Director Instance Security Group TCP Port 25777 (registry)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "25777",
        "ToPort": "25777" ,
        "IpProtocol": "tcp"
      }
    },

    "PrivateToElastiCachePort6379": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateElastiCacheInfrastructure",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-ElastiCacheSecurityGroup" } },
        "Description": "Private Security Group To ElastiCache Security Group TCP Port 6379 (redis)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "6379",
        "ToPort": "6379",
        "IpProtocol": "tcp"
      }
    },

    "PrivateToPrivate": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "Private Security Group To Private Security Group",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    },

    "PrivateToRabbitmqTcpPort8300": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 8300-8302 (consul)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302" ,
        "IpProtocol": "tcp"
      }
    },

    "PrivateToRabbitmqUdpPort8300": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group UDP Port 8300-8302 (consul)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302" ,
        "IpProtocol": "udp"
      }
    },

    "PrivateToRabbitmqPort4567": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 4567 (rabbitmq service broker)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "4567",
        "ToPort": "4567",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToRabbitmqPort1883": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 1883 (mqtt)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "1883",
        "ToPort": "1883",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToRabbitmqPort5671": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 5671 & 5672  (rabbitmq & rabbitmq-ssl)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "5671",
        "ToPort": "5672",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToRabbitmqPort15672": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 15672 (rabbitmq management dashboard)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "15672",
        "ToPort": "15672",
        "IpProtocol": "tcp"
      }
    },
    "PrivateToRabbitmqPort15674": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "Private Security Group To RabbitMQ Security Group TCP Port 15674 (web stomp)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": "15674",
        "ToPort": "15674",
        "IpProtocol": "tcp"
      }
    },

    "PrivateToAppsRdsPort": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployAppsRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsRdsSecurityGroup" } },
        "Description": "PRivate Security Group To Apps RDS Security Group",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-AppsDbPort" } },
        "IpProtocol": "tcp"
      }
    },
    "PrivateToCfRdsPort": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "DeployCfRdsInstance",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfRdsSecurityGroup" } },
        "Description": "PRivate Security Group To CF RDS Security Group",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "FromPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "ToPort": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-CfDbPort" } },
        "IpProtocol": "tcp"
      }
    },

    "RabbitmqToDirectorInstancePort4222": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Private Security Group To Director Instance Security Group TCP Port 4222 (nats)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "4222",
        "ToPort": "4222" ,
        "IpProtocol": "tcp"
      }
    },
    "RabbitmqToDirectorInstancePort25777": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-DirectorInstanceSecurityGroup" } },
        "Description": "Private Security Group To Director Instance Security Group TCP Port 25777 (registry)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "25777",
        "ToPort": "25777" ,
        "IpProtocol": "tcp"
      }
    },

    "RabbitmqToPrivatePort4222": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Private Security Group TCP Port 4222 (nats)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "4222",
        "ToPort": "4222" ,
        "IpProtocol": "tcp"
      }
    },

    "RabbitmqAz1ToPrivateTcpPort8300": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Private Security Group TCP Port 8300-8302 (consul)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302" ,
        "IpProtocol": "tcp"
      }
    },

    "RabbitmqToPrivateUdpPort8300": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-PrivateSecurityGroup" } },
        "Description": "RabbitMQ Security Group To Private Security Group UDP Port 8300-8302 (consul)",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "8300",
        "ToPort": "8302" ,
        "IpProtocol": "udp"
      }
    },

    "RabbitmqToRabbitmq": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Condition": "CreateRabbitmqNetworks",
      "Properties": {
        "GroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "Description": "RabbitMQ Security Group To RabbitMQ Security Group",
        "SourceGroupId": { "Fn::ImportValue": { "Fn::Sub": "${DeploymentName}-RabbitmqSecurityGroup" } },
        "FromPort": "-1",
        "ToPort": "-1",
        "IpProtocol": "-1"
      }
    }
  }
}

